// Title:           Symantec Data Loss Prevention (DLP) Parser
// Author:          Microsoft
// Version:         1.0
// Last Updated:    11/20/2020
// Comment:         Initial Release
//  
// DESCRIPTION:
// This parser takes raw Symantec DLP logs from a Syslog stream and parses the logs into a normalized schema.
//
// USAGE:
// 1. Open Log Analytics/Azure Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter a Function Name.
//    It is recommended to name the Function Alias, as SymantecDLP
// 3. Kusto Functions can typically take up to 15 minutes to activate. You can then use Function Alias for other queries.
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
// 
// LOG SAMPLES:
// This parser assumes the raw log are formatted as follows:
//
//<13>Sep 5 08:22:01 data.example.com CEF:0|Symantec|DLP|12.5.0|ruleID|Policy|5|BLOCKED=Passed INCIDENT_ID=204529 INCIDENT_SNAPSHOT=https://main.example.com/Path/Address MATCH_COUNT=3 PROTOCOL=SMTP RECIPIENTS=email@example.com SENDER=sender@example.com SUBJECT=Sensitive Data (attachment included) SEVERITY=1:High FILE_NAME=myfile.xml
//
//
<CustomLog>
| extend DeviceVendor           = DeviceVendor_s
| extend DeviceProduct          = DeviceProduct_s
| extend AdditionalExtensions   = AdditionalExtensions_s
| extend Activity               = Activity_s

| where DeviceVendor        == "Symantec" and DeviceProduct == "DLP"
| extend Blocked            = extract(@"BLOCKED=([^;]+)\;",1,AdditionalExtensions),
         ApplicationName    = extract(@"APPLICATION_NAME=([^;]+)\;",1,AdditionalExtensions),
         IncidentId         = toint(extract(@"INCIDENT_ID=([^;]+)\;",1,AdditionalExtensions)),
         IncidentSnapshot   = extract(@"INCIDENT_SNAPSHOT=([^;]+)\;",1,AdditionalExtensions),
         AttachedFileName   = extract(@"ATTACHMENT_FILENAME=([^;]+)\;",1,AdditionalExtensions),
         FileName           = extract(@"FILE_NAME=([^;]+)\;",1,AdditionalExtensions),
         MatchCount         = toint(extract(@"MATCH_COUNT=([^;])\;",1,AdditionalExtensions)),
         Protocol           = extract(@"PROTOCOL=([^;])\;",1,AdditionalExtensions),
         Recipients         = extract(@"RECIPIENTS_NAME=([^;]+)\;",1,AdditionalExtensions),
         Sender             = extract(@"SENDER=([^;]+)\;",1,AdditionalExtensions),
         Subject            = extract(@"SUBJECT=([^;]+)\;",1,AdditionalExtensions),
         Severity           = extract(@"SEVERITY=([^;]+)\;",1,AdditionalExtensions),
         EndpointMachine    = extract(@"ENDPOINT_MACHINE=([^;]+)\;",1,AdditionalExtensions),
         EndpointDvcId      = extract(@"ENDPOINT_DEVICE_ID=([^;]+)\;",1,AdditionalExtensions),
         MachineIpAddr      = extract(@"MACHINE_IP=([^;]+)\;",1,AdditionalExtensions),
         OccuredOn          = extract(@"OCCURRED_ON=([^;]+)\;",1,AdditionalExtensions),
         ReportedOn         = extract(@"REPORTED_ON=([^;]+)\;",1,AdditionalExtensions),
         Url                = extract(@"URL=([^;]+)\;",1,AdditionalExtensions),
         DstIpAddr          = extract(@"DESTINATION_IP=([^;]+)\;",1,AdditionalExtensions),
         Scan               = extract(@"SCAN=([^;]+)\;",1,AdditionalExtensions),
         QuarantinePath     = extract(@"QUARANTINE_PATH=([^;]+)\;|$",1,AdditionalExtensions)
