// Usage Instruction : 
// Paste below query in log analytics, click on Save button and select as Function from drop down by specifying function name and alias as GWorkspaceActivityReports.
// Function usually takes 10-15 minutes to activate. You can then use function alias from any other queries (e.g. GWorkspaceActivityReports | take 10).
// Reference : Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions
let GWorkspace_ReportsAPI_admin_view  = view () { 
    GWorkspace_ReportsAPI_admin_CL
    | extend 
                EventVendor="Google",
                EventProduct="Google Workspace Activity Reports",
                ApplicationName=column_ifexists('APPLICATION_NAME_s', ''),
                GroupDomain=column_ifexists('ORG_UNIT_NAME_s', ''),
                ProcessName=column_ifexists('SETTING_NAME_s', ''),
                ApplicationEdition=column_ifexists('APPLICATION_EDITION_s', ''),
                RoleName=column_ifexists('ROLE_NAME_s', ''),
                OldValue=column_ifexists('OLD_VALUE_s', ''),
                EventCategoryType=column_ifexists('kind_s', ''),
                EventOriginalTime=column_ifexists('id_time_t', ''),
                EventId=column_ifexists('id_uniqueQualifier_s', ''),
                IdApplicationName=column_ifexists('id_applicationName_s', ''),
                UserAadid=column_ifexists('id_customerId_s', ''),
                Etag=column_ifexists('etag_s', ''),
                ActorCallerType=column_ifexists('actor_callerType_s', ''),
                ActorKey=column_ifexists('actor_key_s', ''),
                EventOriginalMessage=column_ifexists('events_s', ''),
                EventMessage=column_ifexists('event_name_s', ''),
                EventType=column_ifexists('event_type_s', ''),
                UserEmail=column_ifexists('USER_EMAIL_s', ''),
                ModuleName=column_ifexists('PRODUCT_NAME_s', ''),
                NewValue=column_ifexists('NEW_VALUE_s', ''),
                ActorEmail=column_ifexists('actor_email_s', ''),
                ActorProfileId=column_ifexists('actor_profileId_s', ''),
                SrcIpAddr=column_ifexists('IPAddress', '')
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                ApplicationName,
                GroupDomain,
                ProcessName,
                ApplicationEdition,
                RoleName,
                OldValue,
                EventCategoryType,
                EventOriginalTime,
                EventId,
                IdApplicationName,
                UserAadid,
                Etag,
                ActorCallerType,
                ActorKey,
                EventOriginalMessage,
                EventMessage,
                EventType,
                UserEmail,
                ModuleName,
                NewValue,
                ActorEmail,
                ActorProfileId,
                SrcIpAddr  
};
let GWorkspace_ReportsAPI_calendar_view = view () { 
    GWorkspace_ReportsAPI_calendar_CL
    | extend 
                OldEventTitle=column_ifexists('old_event_title_s', ''),
                EventStartTime=column_ifexists('start_time_s', ''),
                EventEndTime=column_ifexists('end_time_s', ''),
                EventMessage=column_ifexists('event_name_s', ''),
                NotificationType=column_ifexists('notification_type_s', ''),
                NotificationMethod=column_ifexists('notification_method_s', ''),
                DstUserUpn=column_ifexists('recipient_email_s', ''),
                CalendarId=column_ifexists('calendar_id_s', ''),
                TargetCalendarId=column_ifexists('target_calendar_id_s', ''),
                NotificationMessageId=column_ifexists('notification_message_id_s', ''),
                EventUid=column_ifexists('event_id_s', ''),
                UserAgentOriginal=column_ifexists('user_agent_s', ''),
                OrganizerCalendarId=column_ifexists('organizer_calendar_id_s', ''),
                EventTitle=column_ifexists('event_title_s', ''),
                EventGuest=column_ifexists('event_guest_s', ''),
                EventResponseStatus=column_ifexists('event_response_status_s', ''),
                ApiKind=column_ifexists('api_kind_s', ''),
                Kind=column_ifexists('kind_s', ''),
                EventOriginalTime=column_ifexists('id_time_t', ''),
                EventId=column_ifexists('id_uniqueQualifier_s', ''),
                IdApplicationName=column_ifexists('id_applicationName_s', ''),
                UserAadid=column_ifexists('id_customerId_s', ''),
                Etag=column_ifexists('etag_s', ''),
                ActorEmail=column_ifexists('actor_email_s', ''),
                ActorProfileId=column_ifexists('actor_profileId_s', ''),
                OwnerDomain=column_ifexists('ownerDomain_s', ''),
                EventOriginalMessage=column_ifexists('events_s', ''),
                EventType=column_ifexists('event_type_s', ''),
                SrcIpAddr=column_ifexists('IPAddress', ''),
                ActorCallerType=column_ifexists('actor_callerType_s', ''),
                EventVendor="Google",
                EventProduct="Google Workspace Activity Reports"
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                OldEventTitle,
                EventStartTime,
                EventEndTime,
                EventMessage,
                NotificationType,
                NotificationMethod,
                DstUserUpn,
                CalendarId,
                TargetCalendarId,
                NotificationMessageId,
                EventUid,
                UserAgentOriginal,
                OrganizerCalendarId,
                EventTitle,
                EventGuest,
                EventResponseStatus,
                ApiKind,
                Kind,
                EventOriginalTime,
                EventId,
                IdApplicationName,
                UserAadid,
                Etag,
                ActorEmail,
                ActorProfileId,
                OwnerDomain,
                EventOriginalMessage,
                EventType,
                SrcIpAddr,
                ActorCallerType
};
let GWorkspace_ReportsAPI_drive_view = view () { 
    GWorkspace_ReportsAPI_drive_CL
    | extend 
                EventVendor="Google",
                EventProduct="Google Workspace Activity Reports",
                SharedDriveId=column_ifexists('shared_drive_id_s', ''),
                TeamDriveId=column_ifexists('team_drive_id_s', ''),
                OldValue=column_ifexists('old_value_s', ''),
                NewValue=column_ifexists('new_value_s', ''),
                DestinationFolderTitle=column_ifexists('destination_folder_title_s', ''),
                DestinationFolderId=column_ifexists('destination_folder_id_s', ''),
                SourceFolderTitle=column_ifexists('source_folder_title_s', ''),
                SourceFolderId=column_ifexists('source_folder_id_s', ''),
                EventMessage=column_ifexists('event_name_s', ''),
                PrimaryEvent=column_ifexists('primary_event_b', ''),
                Billable=column_ifexists('billable_b', ''),
                DocId=column_ifexists('doc_id_s', ''),
                DocType=column_ifexists('doc_type_s', ''),
                DocTitle=column_ifexists('doc_title_s', ''),
                Visibility=column_ifexists('visibility_s', ''),
                OriginatingAppId=column_ifexists('originating_app_id_s', ''),
                ActorIsCollaboratorAccount=column_ifexists('actor_is_collaborator_account_b', ''),
                Owner=column_ifexists('owner_s', ''),
                OwnerIsSharedDrive=column_ifexists('owner_is_shared_drive_b', ''),
                OwnerIsTeamDrive=column_ifexists('owner_is_team_drive_b', ''),
                VisibilityChange=column_ifexists('visibility_change_s', ''),
                TargetUserName=column_ifexists('target_user_s', ''),
                OldVisibility=column_ifexists('old_visibility_s', ''),
                TargetUserDomain=column_ifexists('target_domain_s', ''),
                Kind=column_ifexists('kind_s', ''),
                EventOriginalTime=column_ifexists('id_time_t', ''),
                EventId=column_ifexists('id_uniqueQualifier_s', ''),
                IdApplicationName=column_ifexists('id_applicationName_s', ''),
                UserAadid=column_ifexists('id_customerId_s', ''),
                Etag=column_ifexists('etag_s', ''),
                ActorEmail=column_ifexists('actor_email_s', ''),
                ActorProfileId=column_ifexists('actor_profileId_s', ''),
                SrcIpAddr=column_ifexists('IPAddress', ''),
                EventOriginalMessage=column_ifexists('events_s', ''),
                EventType=column_ifexists('event_type_s', '')
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                SharedDriveId,
                TeamDriveId,
                OldValue,
                NewValue,
                DestinationFolderTitle,
                DestinationFolderId,
                SourceFolderTitle,
                SourceFolderId,
                EventMessage,
                PrimaryEvent,
                Billable,
                DocId,
                DocType,
                DocTitle,
                Visibility,
                OriginatingAppId,
                ActorIsCollaboratorAccount,
                Owner,
                OwnerIsSharedDrive,
                OwnerIsTeamDrive,
                VisibilityChange,
                TargetUserName,
                OldVisibility,
                TargetUserDomain,
                Kind,
                EventOriginalTime,
                EventId,
                IdApplicationName,
                UserAadid,
                Etag,
                ActorEmail,
                ActorProfileId,
                SrcIpAddr,
                EventOriginalMessage,
                EventType
};
let GWorkspace_ReportsAPI_login_view = view () { 
    GWorkspace_ReportsAPI_login_CL
    | extend 
                EventVendor="Google",
                EventProduct="Google Workspace Activity Reports",
                LoginChallengeMethod=column_ifexists('login_challenge_method_s', ''),
                EventMessage=column_ifexists('event_name_s', ''),
                LoginType=column_ifexists('login_type_s', ''),
                IsSuspicious=column_ifexists('is_suspicious_b', ''),
                LoginChallengeStatus=column_ifexists('login_challenge_status_s', ''),
                IsSecondFactor=column_ifexists('is_second_factor_b', ''),
                Kind=column_ifexists('kind_s', ''),
                EventOriginalTime=column_ifexists('id_time_t', ''),
                EventId=column_ifexists('id_uniqueQualifier_s', ''),
                IdApplicationName=column_ifexists('id_applicationName_s', ''),
                UserAadid=column_ifexists('id_customerId_s', ''),
                Etag=column_ifexists('etag_s', ''),
                ActorEmail=column_ifexists('actor_email_s', ''),
                ActorProfileId=column_ifexists('actor_profileId_s', ''),
                SrcIpAddr=column_ifexists('IPAddress', ''),
                EventOriginalMessage=column_ifexists('events_s', ''),
                EventType=column_ifexists('event_type_s', '')
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                LoginChallengeMethod,
                EventMessage,
                LoginType,
                IsSuspicious,
                LoginChallengeStatus,
                IsSecondFactor,
                Kind,
                EventOriginalTime,
                EventId,
                IdApplicationName,
                UserAadid,
                Etag,
                ActorEmail,
                ActorProfileId,
                SrcIpAddr,
                EventOriginalMessage,
                EventType
};
let GWorkspace_ReportsAPI_mobile_view = view () { 
    GWorkspace_ReportsAPI_mobile_CL
    | extend 
                EventVendor="Google",
                EventProduct="Google Workspace Activity Reports",
                DvcInterfaceGuid=column_ifexists('DEVICE_ID_s', ''),
                OldValue=column_ifexists('OLD_VALUE_s', ''),
                NeqValue=column_ifexists('NEW_VALUE_s', ''),
                OsProperty=column_ifexists('OS_PROPERTY_s', ''),
                LastSyncAuditDate=column_ifexists('LAST_SYNC_AUDIT_DATE_s', ''),
                AccountState=column_ifexists('ACCOUNT_STATE_s', ''),
                RegisterPrivelege=column_ifexists('REGISTER_PRIVILEGE_s', ''),
                EventMessage=column_ifexists('event_name_s', ''),
                DstUserUpn=column_ifexists('USER_EMAIL_s', ''),
                DvcGuid=column_ifexists('DEVICE_ID_g', ''),
                SerialNumber=column_ifexists('SERIAL_NUMBER_s', ''),
                DvcType=column_ifexists('DEVICE_TYPE_s', ''),
                DvcModelName=column_ifexists('DEVICE_MODEL_s', ''),
                ResourceId=column_ifexists('RESOURCE_ID_s', ''),
                IosVendorId=column_ifexists('IOS_VENDOR_ID_s', ''),
                DvcModelNumber=column_ifexists('OS_VERSION_s', ''),
                IosVendorUID=column_ifexists('IOS_VENDOR_ID_g', ''),
                Kind=column_ifexists('kind_s', ''),
                EventOriginalTime=column_ifexists('id_time_t', ''),
                EventId=column_ifexists('id_uniqueQualifier_s', ''),
                IdApplicationName=column_ifexists('id_applicationName_s', ''),
                UserAadid=column_ifexists('id_customerId_s', ''),
                Etag=column_ifexists('etag_s', ''),
                ActorCallerType=column_ifexists('actor_callerType_s', ''),
                ActorEmail=column_ifexists('actor_email_s', ''),
                ActorProfileId=column_ifexists('actor_profileId_s', ''),
                EventOriginalMessage=column_ifexists('events_s', ''),
                EventType=column_ifexists('event_type_s', '')
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                DvcInterfaceGuid,
                OldValue,
                NeqValue,
                OsProperty,
                LastSyncAuditDate,
                AccountState,
                RegisterPrivelege,
                EventMessage,
                DstUserUpn,
                DvcGuid,
                SerialNumber,
                DvcType,
                DvcModelName,
                ResourceId,
                IosVendorId,
                DvcModelNumber,
                IosVendorUID,
                Kind,
                EventOriginalTime,
                EventId,
                IdApplicationName,
                UserAadid,
                Etag,
                ActorCallerType,
                ActorEmail,
                ActorProfileId,
                EventOriginalMessage,
                EventType
};
let GWorkspace_ReportsAPI_token_view = view () { 
    GWorkspace_ReportsAPI_token_CL
    | extend 
                EventVendor="Google",
                EventProduct="Google Workspace Activity Reports",
                ScopeData=column_ifexists('scope_data_s', ''),
                Scope=column_ifexists('scope_s', ''),
                EventMessage=column_ifexists('event_name_s', ''),
                ClientId=column_ifexists('client_id_s', ''),
                AppName=column_ifexists('app_name_s', ''),
                ClientType=column_ifexists('client_type_s', ''),
                Kind=column_ifexists('kind_s', ''),
                EventOriginalTime=column_ifexists('id_time_t', ''),
                EventId=column_ifexists('id_uniqueQualifier_s', ''),
                IdApplicationName=column_ifexists('id_applicationName_s', ''),
                UserAadid=column_ifexists('id_customerId_s', ''),
                Etag=column_ifexists('etag_s', ''),
                ActorEmail=column_ifexists('actor_email_s', ''),
                ActorProfileId=column_ifexists('actor_profileId_s', ''),
                SrcIpAddr=column_ifexists('IPAddress', ''),
                EventOriginalMessage=column_ifexists('events_s', ''),
                EventType=column_ifexists('event_type_s', '')
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                ScopeData,
                Scope,
                EventMessage,
                ClientId,
                AppName,
                ClientType,
                Kind,
                EventOriginalTime,
                EventId,
                IdApplicationName,
                UserAadid,
                Etag,
                ActorEmail,
                ActorProfileId,
                SrcIpAddr,
                EventOriginalMessage,
                EventType
};
let GWorkspace_ReportsAPI_user_accounts_view = view () { 
    GWorkspace_ReportsAPI_user_accounts_CL
    | extend 
                EventVendor="Google",
                EventProduct="Google Workspace Activity Reports",
                Kind=column_ifexists('kind_s', ''),
                EventOriginalTime=column_ifexists('id_time_t', ''),
                EventId=column_ifexists('id_uniqueQualifier_s', ''),
                IdApplicationName=column_ifexists('id_applicationName_s', ''),
                UserAadid=column_ifexists('id_customerId_s', ''),
                Etag=column_ifexists('etag_s', ''),
                ActorCallerType=column_ifexists('actor_callerType_s', ''),
                ActorEmail=column_ifexists('actor_email_s', ''),
                ActorProfileId=column_ifexists('actor_profileId_s', ''),
                SrcIpAddr=column_ifexists('IPAddress', ''),
                EventOriginalMessage=column_ifexists('events_s', ''),
                EventMessage=column_ifexists('event_name_s', ''),
                EventType=column_ifexists('event_type_s', '')
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                Kind,
                EventOriginalTime,
                EventId,
                IdApplicationName,
                UserAadid,
                Etag,
                ActorCallerType,
                ActorEmail,
                ActorProfileId,
                SrcIpAddr,
                EventOriginalMessage,
                EventMessage,
                EventType
};
union isfuzzy=true GWorkspace_ReportsAPI_admin_view, GWorkspace_ReportsAPI_calendar_view, GWorkspace_ReportsAPI_drive_view, GWorkspace_ReportsAPI_login_view, GWorkspace_ReportsAPI_mobile_view, GWorkspace_ReportsAPI_token_view, GWorkspace_ReportsAPI_user_accounts_view
