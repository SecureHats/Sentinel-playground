// Title:           Symantec ProxySG Data Parser
// Author:          Microsoft
// Version:         1.0
// Last Updated:    05/21/2020
// Comment:         Inital Release
//
// DESCRIPTION:
// This parser takes raw Symantec ProxySG Access Logs from a Syslog data stream and parses the data into a normalized schema
//
// USAGE INSTRUCTIONS:
// 1. Open Log Analytics/Azure Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. In the query window, on the second line of the query, enter the hostname(s) of your Symantec ProxySG device(s) and any other unique identifiers for the logstream. 
//    For example: | where Computer in ("server1, server2") and Facility == "local0"
// 3. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter a Function Name. 
//    In order for the Symantec ProxySG access logs to work with pre-built queries and workbooks the Function Alias must be set to - SymantecProxySG
// 4. Function App usually take 10-15 minutes to activate. You can then use Function Alias for other queries 
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https:docs.microsoft.com/azure/azure-monitor/log-query/functions
// Symantec ProxySG Access log format: https:portal.threatpulse.com/docs/sol/Solutions/Reference/accesslogformats-ref.htm
//
// LOG SAMPLES:
// This parser assumes the raw log are formatted as follows:
// 
//      2020-05-01 23:07:37 628 10.0.0.0 user67 - - OBSERVED "Web Ads/Analytics" -  200 TCP_TUNNELED CONNECT - tcp gmtdmp.mookie1.com 443 / - - "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36" 10.10.10.10 1601 1586 - "none" "none" 3128 Ambiguous%20-%20Special%20Use 2
//      2020-05-01 23:07:33 2765 10.1.1.1 user9 - - OBSERVED "WhiteList;Web Ads/Analytics" -  200 TCP_TUNNELED CONNECT - tcp pagead2.googlesyndication.com 443 / - - "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36" 10.10.10.10 4269 1474 - "none" "none" 3128 Ambiguous%20-%20Special%20Use 2
//
//
<CustomLog>
| where Computer in ("datasource") and Facility_s == "local0"
// Parse 1/3 of SyslogMessage. Seperated due to extract_all() operator limited to 16 regex groups
| extend Parser = extract_all(@'^(\d{4}\-\d{2}-\d{2})\s+(\d{2}\:\d{2}:\d{2})\s+(\d+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+\"([\w\s\)\(;\/_-]+)\"\s+(\S+)\s+(\d+)\s+([\S\s]+)',dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), SyslogMessage_s)
| mv-expand Parser
| extend logTime = todatetime(strcat(tostring(Parser[0]),'T',tostring(Parser[1]))), 
    time_taken = tolong(Parser[2]), 
    c_ip = tostring(Parser[3]), 
    cs_userdn = tostring(Parser[4]), 
    cs_auth_groups= replace(@"%20",@'',tostring(Parser[5])), 
    exception_id = tostring(Parser[6]), 
    sc_filter_result = tostring(Parser[7]), 
    cs_categories = split(Parser[8],";"), 
    cs_referrer = tostring(Parser[9]), 
    sc_status = tostring(Parser[10]), 
    RemainingString1 = Parser[11]
// Parse 2/3 of SyslogMessage
| extend Parser2 = extract_all(@'^(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\"([\w\s\)\,\.\(\;\:\/\_\-\|\}\{\%\=\+\?\<\>\#\]\[]+)\"|(\S+))\s+(\S+)\s+(\S+)\s+([\S\s]+)',dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]), tostring(RemainingString1))
| mv-expand Parser2
// Parse 3/3 of SyslogMessage
| extend s_action = tostring(Parser2[0]), 
    cs_method= tostring(Parser2[1]), 
    content_type = split(replace(@"%20",@'',tostring(Parser2[2])),";"), 
    cs_uri_scheme = tostring(Parser2[3]), 
    cs_host = tostring(Parser2[4]), 
    cs_uri_port = tostring(Parser2[5]), 
    cs_uri_path = tostring(Parser2[6]), 
    cs_uri_query = tostring(Parser2[7]), 
    cs_uri_extension = tostring(Parser2[8]), 
    cs_user_agent = tostring(Parser2[10]), s_ip = tostring(Parser2[12]), 
    sent_bytes =  tolong(Parser2[13]), RemainingString2 = Parser2[14]
| extend Parser3 = extract_all(@'^(\d+)\s+(\S+)\s+\"([\w].+)\"\s+\"([\w].+)\"\s+(\d+)\s+(\S+)\s+(\S+)',dynamic([1,2,3,4,5,6,7]), tostring(RemainingString2))
| mv-expand Parser3
| extend received_bytes = tolong(Parser3[0]), 
    virus_id = tostring(Parser3[1]), 
    app_name = tostring(Parser3[2]), 
    app_operation = tostring(Parser3[3]), 
    src_port = tostring(Parser3[4]), 
    cs_threat_risk = tostring(Parser3[6]),
    country = replace(@"%20",@' ',tostring(Parser3[5]))
| project-away Parser, Parser2, Parser3, RemainingString1, RemainingString2
